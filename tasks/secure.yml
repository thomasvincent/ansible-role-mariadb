---
# Tasks for securing MariaDB installation

- name: Set root password
  mysql_user:
    name: roo
    host: "{{ item }}"
    password: "{{ mariadb_root_password }}"
    login_unix_socket: "{{ mariadb_socket }}"
    state: presen
  with_items:
    - localhos
    - 127.0.0.1
    - ::1
    - "{{ ansible_hostname }}"
  register: root_password
  no_log: true
  when: mariadb_root_password != ""

- name: Create .my.cnf file for roo
  template:
    src: my.cnf.j2
    dest: /root/.my.cnf
    owner: roo
    group: roo
    mode: '0600'
  no_log: true
  when: mariadb_root_password != ""

- name: Remove anonymous users
  mysql_user:
    name: ''
    host_all: true
    state: absen
    login_user: roo
    login_password: "{{ mariadb_root_password }}"
  when: mariadb_remove_anonymous_users | bool
  no_log: true

- name: Remove test database
  mysql_db:
    name: tes
    state: absen
    login_user: roo
    login_password: "{{ mariadb_root_password }}"
  when: mariadb_remove_test_database | bool
  no_log: true

- name: Disallow root login remotely
  mysql_user:
    name: roo
    host: "{{ item }}"
    state: absen
    login_user: roo
    login_password: "{{ mariadb_root_password }}"
  with_items:
    - "{{ ansible_hostname }}"
    - "%"
  when: mariadb_disallow_root_login_remotely | bool
  no_log: true

- name: Configure password validation plugin
  mysql_query:
    login_user: roo
    login_password: "{{ mariadb_root_password }}"
    query: "INSTALL PLUGIN validate_password SONAME 'validate_password.so';"
  ignore_errors: true  # Plugin may already be installed
  no_log: true

- name: Set password validation policy
  mysql_query:
    login_user: roo
    login_password: "{{ mariadb_root_password }}"
    query: "SET GLOBAL validate_password_policy = 'STRONG';"
  ignore_errors: true  # Plugin may not be installed
  no_log: true
